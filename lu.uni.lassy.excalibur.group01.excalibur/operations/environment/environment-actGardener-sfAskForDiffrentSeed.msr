package lu.uni.lassy.excalibur.group01.excalibur.environment.operations.actGardener.outactGardener.sfAskForDiffrentSeed {

import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.string
import lu.uni.lassy.messir.libraries.calendar

	Operation Model {

		operation: lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener.outactGardener.sfAskForDiffrentSeed(adtName:dtString,adtAmount:dtInteger):ptBoolean{
		// include below the specification information (pre,post or ocl or prolog)
		preP{let TheSystem: lu.uni.lassy.excalibur.group01.excalibur.concepts.primarytypes.classes.ctState in
				let TheActor: lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener in
				self.rnActor.rnSystem = TheSystem
				and self.rnActor = TheActor
				
				/* PreP01 */
				and TheSystem.vpStarted = true	
			}
			preF{
				let TheSystem: lu.uni.lassy.excalibur.group01.excalibur.concepts.primarytypes.classes.ctState in
				let TheActor: lu.uni.lassy.excalibur.group01.excalibur.environment.actManager in
				let AllSeeds: Bag(lu.uni.lassy.excalibur.group01.excalibur.concepts.primarytypes.classes.ctSeed) in
				self.rnActor.rnSystem = TheSystem
				and self.rnActor = TheActor
				and AllSeeds->exists(self.name <> adtName)
				and adtAmount>0
				
				
				/* PreF01 */
				let TheResult:ptBoolean in
			
				if(adtAmount>0)
				then (TheResult = true)
      			else (TheResult = false)
      			endif
      			and result = TheResult
				
				
				
				
			}
			
			

		}
	}
}
