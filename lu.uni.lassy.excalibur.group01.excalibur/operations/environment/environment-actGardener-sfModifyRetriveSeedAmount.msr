package lu.uni.lassy.excalibur.group01.excalibur.environment.operations.actGardener.outactGardener.sfModifyRetriveSeedAmount {

import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.string
import lu.uni.lassy.messir.libraries.calendar

	Operation Model {

		operation: lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener.outactGardener.sfModifyRetriveSeedAmount():ptBoolean{
		preP {let TheSystem: lu.uni.lassy.excalibur.group01.excalibur.concepts.primarytypes.classes.ctState in
				let TheActor: lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener in
				self.rnActor.rnSystem = TheSystem
				and self.rnActor = TheActor
				
				/* PreP01 */
				and TheSystem.vpStarted = true
			}
			
			preF{
				let TheSystem: lu.uni.lassy.excalibur.group01.excalibur.concepts.primarytypes.classes.ctState in
				let TheActor: lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener in
				let AllSeed: Set(lu.uni.lassy.excalibur.group01.excalibur.concepts.primarytypes.classes.ctSeed) in
				let number: dtInteger in
				self.rnActor.rnSystem = TheSystem
				and self.rnActor = TheActor
				/* PreF01 */
				TheSystem.rnCrops->select(id.eq(AdtSeedID)) = AllSeeds
				and AllSeeds->size().eq(1)
				AllSeeds.amount = amount- number
			}
			
			postF {let TheSystem: lu.uni.lassy.excalibur.group01.excalibur.concepts.primarytypes.classes.ctState in
				let TheActor: lu.uni.lassy.excalibur.group01.excalibur.environment.actManager in
				self.rnActor.rnSystem = TheSystem
				and self.rnActor = TheActor
				
				/* PostF01 */
				TheSystem.rnSeeds->select(id.eq(AdtSeedID)) = AllSeeds
				and AllSeeds.rnSeeds->forAll(msrIsKilled)
				and AllSeeds.msrIsKilled
				
			}

		}
	}
}
