package lu.uni.lassy.excalibur.group01.excalibur.environment.operations.actGardener.outactGardener.sfModifyRetriveSeedAmount {

import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.string
import lu.uni.lassy.messir.libraries.calendar

	Operation Model {

		operation: lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener.outactGardener.sfModifyRetriveSeedAmount():ptBoolean{
		preP {let TheSystem: lu.uni.lassy.excalibur.group01.excalibur.concepts.primarytypes.classes.ctState in
				let TheActor: lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener in
				self.rnActor.rnSystem = TheSystem
				and self.rnActor = TheActor
				
				/* PreP01 */
				and TheSystem.vpStarted = true
			}
			
			preF{
				let TheSystem: lu.uni.lassy.excalibur.group01.excalibur.concepts.primarytypes.classes.ctState in
				let TheActor: lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener in
				let AllSeed: Set(lu.uni.lassy.excalibur.group01.excalibur.concepts.primarytypes.classes.ctSeed) in
	
				
				and AllSeeds->exists(self.name=adtName)
				and adtAmount>0
				and AllSeeds->any(self.name=adtName).amount>adtAmount
				
				
			}
			
			postF {
				let TheSystem: lu.uni.lassy.excalibur.group01.excalibur.concepts.primarytypes.classes.ctState in
				let TheActor: lu.uni.lassy.excalibur.group01.excalibur.environment.actManager in
				self.rnActor.rnSystem = TheSystem
				let AllSeed: Set(lu.uni.lassy.excalibur.group01.excalibur.concepts.primarytypes.classes.ctSeed) in
				and self.rnActor = TheActor
				AllSeed->any(self.name=adtName).amount@post = AllSeed->any(self.name=adtName).amount@pre-adtAmount
				
			}

		}
	}
}
