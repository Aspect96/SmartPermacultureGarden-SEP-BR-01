/*
* @author Gaetan1991
* @date Wed Oct 11 14:39:06 CEST 2017
*/

package lu.uni.lassy.excalibur.group01.excalibur.usecases {

import lu.uni.lassy.messir.libraries.calendar
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.string



	Use Case Model {
		
	use case system subfunction sfcheckSensor() {
			actor lu.uni.lassy.excalibur.group01.excalibur.environment.actTechnician[primary, active]
			
		}
	use case system subfunction sfplating() {
			actor lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener[primary, active]
		}
	use case system subfunction oeLogin() {
			actor lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener[primary, active]
		}
	use case system subfunction oeLogout() {
			actor lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener[primary, active]
		}
	use case system usergoal ugSecurelyUseSystem() {
		actor lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener[primary,active]
		
		reuse oeLogin[1..1]
		reuse oeLogout[1..1]
		
		step a: lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener
			executes oeLogin
		step b: lu.uni.lassy.excalibur.group01.excalibur.environment.actGardener
			executes oeLogout
			
		ordering constraint
		"step (a) must always precede step (b)."
		}
		
	use case system usergoal ugAskForSensor() {
		actor lu.uni.lassy.excalibur.group01.excalibur.environment.actTechnician[primary,active]
		actor lu.uni.lassy.excalibur.group01.excalibur.environment.actSystem[secondary,passive]
		reuse oeEntersFields[1..1]
		reuse sfChecksInputFields[1..*]
		reuse oeRequestPushedToTable[1..1]
		
		step a: lu.uni.lassy.excalibur.group01.excalibur.environment.actTechnician
		executes oeEntersFields()
		
		step b: lu.uni.lassy.excalibur.group01.excalibur.environment.actSystem
		executes sfChecksInputFields()
		
		step c: lu.uni.lassy.excalibur.group01.excalibur.environment.actSystem
		executes oeRequestPushedToTable()
		
		ordering constraint "step (a) must be executed first"
		ordering constraint "step(b) has to be sussesfully to preceed step(c)"
		
		}
	use case system subfunction oeEntersFields() {
			actor lu.uni.lassy.excalibur.group01.excalibur.environment.actTechnician[primary, active]
		}
	use case system subfunction sfSendsRequest() {
			actor lu.uni.lassy.excalibur.group01.excalibur.environment.actSystem[primary, active]
		}
	use case system subfunction sfChecksInputFields() {
			actor lu.uni.lassy.excalibur.group01.excalibur.environment.actSystem[primary, active]
		}
	use case system subfunction oeRequestPushedToTable() {
			actor lu.uni.lassy.excalibur.group01.excalibur.environment.actSystem[primary, active]
		}
	}

}